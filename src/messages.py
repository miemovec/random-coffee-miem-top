from datetime import datetime, timedelta
import textwrap
import pandas as pd

def next_sunday():
    today = datetime.today()
    days_ahead = 6 - today.weekday()  # –í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ = 6
    if days_ahead <= 0:
        days_ahead += 7
    next_sunday_date = today + timedelta(days=days_ahead)
    return next_sunday_date


def menu_text_html(participate):
    # –¢–µ–∫—É—â–∞—è –¥–∞—Ç–∞
    current_date = datetime.today().strftime('%d %B %Y')

    # –î–∞—Ç–∞ —Å–ª–µ–¥—É—é—â–µ–≥–æ —Ä–∞—É–Ω–¥–∞
    next_round_date = next_sunday().strftime('%d %B %Y')

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —É—á–∞—Å—Ç–∏—è
    status = "üü¢ –£–ß–ê–°–¢–í–£–Æ" if participate else "üî¥ –ù–ï –£–ß–ê–°–¢–í–£–Æ"

    # –ë–ª–æ–∫–∏ —Ç–µ–∫—Å—Ç–∞
    blocks = [
        "<b>Random Coffee</b>\n",
        ("–û—Å–Ω–æ–≤–Ω–æ–π –≤–∞—Ä–∏–∞–Ω—Ç –≤—Å—Ç—Ä–µ—á –¥–ª—è –≤—Å–µ—Ö —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π "
         "–ú–∏—ç–º–∞. –ù–∞—à —É–º–Ω—ã–π –∞–ª–≥–æ—Ä–∏—Ç–º –±—É–¥–µ—Ç —Ä–µ–≥—É–ª—è—Ä–Ω–æ "
         "–ø–æ–¥–±–∏—Ä–∞—Ç—å –∏ –ø—Ä–∏—Å—ã–ª–∞—Ç—å –≤—Å—Ç—Ä–µ—á–∏ —Å –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–º–∏ "
         "–∏–º–µ–Ω–Ω–æ –≤–∞–º —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞–º–∏."),
        "–í—Å—Ç—Ä–µ—á–∏ –ø—Ä–æ—Ö–æ–¥—è—Ç —Ä–∞–∑ –≤ –Ω–µ–¥–µ–ª—é.\n",
        "<b>–°–ª–µ–¥—É—é—â–∏–π —Ä–∞—É–Ω–¥:</b>\n",
        next_round_date + "\n",
        "<b>–°—Ç–∞—Ç—É—Å:</b>\n",
        status + "\n",
        f"–¢–µ–∫—É—â–∞—è –¥–∞—Ç–∞: {current_date}"
    ]

    formatted_blocks = []
    for block in blocks:
        if not block.startswith("<b>") and "\n" not in block:
            formatted_blocks.append(textwrap.fill(block, width=44))
        else:
            formatted_blocks.append(block)

    formatted_text = "\n".join(formatted_blocks)

    return formatted_text


def user_pair_html(user_id, users_file='all_users.csv'):
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç HTML —Å —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞–º–∏ –ø–∞—Ä—ã –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ –µ–≥–æ user_id.
    """
    try:
        users = pd.read_csv(users_file)
    except FileNotFoundError:
        return "<b>–û—à–∏–±–∫–∞:</b> –§–∞–π–ª —Å –¥–∞–Ω–Ω—ã–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–µ –Ω–∞–π–¥–µ–Ω."


    user_data = users[users['chat_id'] == user_id]
    if user_data.empty:
        return "<b>–û—à–∏–±–∫–∞:</b> –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã."

    user_data = user_data.iloc[0]

    html_content = (
        f"<b>–í–∞—à —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫:</b>\n\n"
        f"<b>–ò–º—è:</b> {user_data['name']}\n"
        f"<b>–í–æ–∑—Ä–∞—Å—Ç:</b> {int(user_data['age'])}\n"
        f"<b>–ü–æ–ª:</b> {'–ú—É–∂—á–∏–Ω–∞' if user_data['sex'] == '–º—É–∂—Å–∫–æ–π' else '–ñ–µ–Ω—â–∏–Ω–∞'}\n"
        f"<b>–û–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞:</b> {', '.join(eval(user_data['specialization'])) if pd.notnull(user_data['specialization']) else '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}\n"
        f"<b>–ò–Ω—Ç–µ—Ä–µ—Å—ã:</b> {', '.join(eval(user_data['tags'])) if pd.notnull(user_data['tags']) else '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}\n\n"
        f"<b>telegram:</b> @{user_data['username']}"
    )
    return html_content


def user_profile(chat_id, file_path='all_users.csv', only_stats=False):
    try:
        df = pd.read_csv(file_path)
    except FileNotFoundError:
        return "<b>–û—à–∏–±–∫–∞:</b> –§–∞–π–ª —Å –¥–∞–Ω–Ω—ã–º–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω."
    user = df[df['chat_id'] == chat_id]

    if user.empty:
        return "<b>–û—à–∏–±–∫–∞:</b> –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω."

    user_data = user.iloc[0]

    if pd.isnull(user_data['sex']):
        return (
            f"<b>–í–∞—à–∞ –∞–Ω–∫–µ—Ç–∞:</b>\n\n"
            f"<b>–°—Ç–∞—Ç—É—Å:</b> –ê–Ω–∫–µ—Ç–∞ –ø—É—Å—Ç–∞—è.\n"
            f"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –∞–Ω–∫–µ—Ç—É –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è."
        )

    if only_stats:
        html_content = (
            f"<b>–ò–º—è:</b> {user_data['name']}\n"
            f"<b>–í–æ–∑—Ä–∞—Å—Ç:</b> {int(user_data['age'])}\n"
            f"<b>–ü–æ–ª:</b> {user_data['sex']}\n"
            f"<b>–û–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞:</b> {', '.join(eval(user_data['specialization'])) if pd.notnull(user_data['specialization']) else '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}\n"
            f"<b>–ò–Ω—Ç–µ—Ä–µ—Å—ã:</b> {', '.join(eval(user_data['tags'])) if pd.notnull(user_data['tags']) else '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}\n"
            f"<b>–¢–µ–ª–µ–≥—Ä–∞–º:</b> @{user_data['username']}\n"
        )
    else:
        html_content = (
            f"<b>–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:</b>\n\n"
            f"<b>–ò–º—è:</b> {user_data['name']}\n"
            f"<b>–í–æ–∑—Ä–∞—Å—Ç:</b> {int(user_data['age'])}\n"
            f"<b>–ü–æ–ª:</b> {user_data['sex']}\n"
            f"<b>–û–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞:</b> {', '.join(eval(user_data['specialization'])) if pd.notnull(user_data['specialization']) else '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}\n"
            f"<b>–ò–Ω—Ç–µ—Ä–µ—Å—ã:</b> {', '.join(eval(user_data['tags'])) if pd.notnull(user_data['tags']) else '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}"
        )


    return html_content

def change_photo_text():
    text = '–ü—Ä–∏—à–ª–∏—Ç–µ —Ñ–æ—Ç–æ –ø—Ä–æ—Ñ–∏–ª—è, –∫–æ—Ç–æ—Ä–æ–µ —É–≤–∏–¥–∏—Ç –≤–∞—à —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫'
    return text


